<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>re.ToDoList</groupId>
	<artifactId>ToDoList</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ToDoList</name>
	<description>ToDoList project for Spring Boot</description>

	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	
	<properties>
		<java.version>17</java.version>
		<flyway.version>11.11.2</flyway.version>
    	<postgresql.version>42.7.7</postgresql.version>
	</properties>

	<dependencies>
<!-- 	spring-boot-starter-validation fournit :
		- API Jakarta Validation et implémentation Hibernate Validator.
		- Intégration Spring: exécute la validation quand tu mets @Valid ou @Validated.
		- Réponse 400 automatique si violations. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency> <!--jakarta.persistence-api est déjà fourni par spring-boot-starter-data-jpa -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- <dependency>  
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>3.1.0</version>
		</dependency> -->

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
    	</dependency>

		<!-- Flyway au runtime (exécuté par Spring Boot au démarrage si activé) -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>

		<!-- Module SGBD Flyway pour PostgreSQL (Flyway 10+) -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<version>${flyway.version}</version>
		</dependency>

 </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		
			<!-- Plugin Flyway pour lancer mvn flyway:migrate/clean/info en CLI
					(indépendant de l'exécution au démarrage par Spring Boot)
				-->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
				<configuration>
					<url>jdbc:postgresql://localhost:5432/todo_db</url> <!--.db -->
					<user>dev2</user>
					<password>456123</password>
					<defaultSchema>public</defaultSchema>
					<locations>
						<location>filesystem:src/main/resources/db/migration</location>
					</locations>
				</configuration>

				<!-- Le plugin a son propre classloader: on lui fournit le driver et le module DB -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
					<dependency>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-database-postgresql</artifactId>
						<version>${flyway.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
